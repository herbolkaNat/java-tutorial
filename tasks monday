1
https://www.codewars.com/kata/convert-a-string-to-an-array/train/javascript
function stringToArray(string){
return string.split(" ");
	// code code code
}
4 способи.У мене вийшло лише з першим. Це тому, що перший спосіб розбиває по словам, а три інші по символам?
https://www.samanthaming.com/tidbits/83-4-ways-to-convert-string-to-character-array/

2
https://www.codewars.com/kata/dna-to-rna-conversion/train/javascript
function DNAtoRNA(dna) {
  return dna.replace(/T/g, "U");
  // create a function which returns an RNA sequence from the given DNA sequence
}

3
https://www.codewars.com/kata/577a98a6ae28071780000989/train/javascript
const min = function(list){
    return Math.min(...list);
}

const max = function(list){
  return Math.max(...list);
}
4 
https://www.codewars.com/kata/544a54fd18b8e06d240005c0/train/javascript

function min(arr, toReturn) {
  const minNumber = Math.min(...arr);
  const num = arr.indexOf(minNumber);
 if (toReturn === 'value') {
   toReturn minNumber;
   } else if (toReturn === 'index') {
     return num;
     
  5
  https://www.codewars.com/kata/geometry-basics-circle-circumference-in-2d/train/javascript
  function circleCircumference(circle) {
const circumferenceCircle = circle.radius * 2 * Math.PI;
  return circumferenceCircle;
}
     
   };
  // TODO
}

WEDNESDAY
1
https://www.codewars.com/kata/find-the-smallest-integer-in-the-array/train/javascript

class SmallestIntegerFinder {
  findSmallestInt(args) {
    let currentMinArg = args[0];
    for(let i = 1; i < args.length; i++;) {
    if(args[i] < currentMinArg) currentMinArg = args[i];
  }
    return currentMinArg;
  }
}

2.
https://www.codewars.com/kata/geometry-basics-circle-circumference-in-2d/train/javascript
function circleCircumference(circle) {
const circumferenceCircle = circle.radius * 2 * Math.PI;
  return circumferenceCircle;
}


3
https://www.codewars.com/kata/fun-with-es6-classes-number-2-animals-and-inheritance/train/javascript
class Shark extends Animal {
  constructor(name, age, status) {
    super();
    this.name = name;
    this.age = age;
    this.legs = 0;
    this.status = status;
    this.species = 'shark';
  }
}

class Cat extends Animal {
  constructor(name, age, status) {// Do the same here as you did for Shark - define your constructor function and any other methods you need
super();
    this.name = name;
    this.age = age;
    this.legs = 4;
    this.status = status;
    this.species = 'cat';
      }
  introduce() {
      return `Hello, my name is ${this.name} and I am ${this.age} years old. Meow meow!`;
  }
  

class Dog extends Animal {
  constructor(name, age, status, master='') {
    super();
    this.master = master;
    this.name = name;
    this.age = age;
    this.legs = 4;
    this.status = status;
    this.species = 'dog';
  }
  introduce() {
    return `Hello, my name is ${this.name} and I am ${this.age} years old.`;
  }
  greetMaster() {
    return `Hello ${this.master}`;
  }// On your own now - you can do it :D
}
